<!-- resources/sakai_create_uploads.vm, use with org.sakaiproject.tool.content.ResourcesHelperAction.java -->
<div class="portletBody">
	<h4>
		$tlang.getString("create.uploads")
	</h4>
	#if ($itemAlertMessage)
		<div class="alertMessage">$tlang.getString("label.alert") $validator.escapeHtml($itemAlertMessage)</div>
		<div style="display:block;clear:both" ></div>
	#end
	<p class="instr">
		$tlang.getString("instr.upload")
	</p>
	<form name="addContentForm" id="addContentForm" method="post" action="#toolForm("ResourcesHelperAction")"  enctype="multipart/form-data">
		<input type="hidden" name="fileCount" id="fileCount" value="$items.size()" />
		<input type="hidden" name="lastIndex" id="lastIndex" value="$items.size()" />
		<div id="fileInputDiv">
			#set($i = 0)
			#foreach($item in $items)
				
				#set($prev = $i)
				#set($i = $i + 1)
				#set($next = $i + 1)
				
				<div id="contentDiv$i" class="highlightPanel">
					<p class="shorttext">
						<label for="content$i">$tlang.getString("label.upload")</label>
						<input type="file" name="content$i" id="content$i" class ="upload" onchange="javascript:seedValue(this, 'name$i', true)" />
						<a class="indnt2" href="#" onclick="javascript:showHide('propertiesDiv$i');">$tlang.getString("edit.show")</a>
						<a class="indnt2" href="#" rtindex="$i" onclick="javascript:removeFileItem('$i');" >
							<img src="#imageLink("sakai/cross.png")" title="$tlang.getString("edit.remove")" />
						</a>
					</p>
					<input type="hidden" id="prev$i" name="prev$i" value="#if($i > 1)${prev}#end" />
					<input type="hidden" id="next$i" name="next$i" value="#if($i < $items.size())${next}#end" />
				</div>
				#parse("/vm/resources/sakai_properties.vm")
			#end
		</div>
		<p class="act">
			<input type="button" name="addfile" id="addfile" onclick="javascript:addFileInput();" value="$tlang.getString("label.addfile")" />
			<span class="submitnotif" id="submitnotif01" style="visibility:hidden">$tlang.getString("label.proces")</span>
		</p>
		<p class="act">
			<input type="button" class="active" name="savechanges" id="saveChanges" onclick="javascript:showNotif('submitnotif','saveChanges','addContentForm');document.getElementById('addContentForm').action='#toolLink("ResourcesHelperAction" "doUpload")&flow=save';submitform('addContentForm');" value="$tlang.getString("label.continue")" accesskey="s" />
			<input type="button" name="cancel" onclick="javascript:document.getElementById('addContentForm').action='#toolLink("ResourcesHelperAction" "doCancel")';submitform('addContentForm');" value="$tlang.getString("label.cancel")" accesskey="x" />
			<span id="submitnotif" style="visibility:hidden">$tlang.getString("label.proces")</span>
		</p>
	</form>
</div>
<script type="text/javascript" language="JavaScript">
	<!--
	var DOT = ".";
	function submitform(id)
	{
		var theForm = document.getElementById(id);
		if(theForm && theForm.onsubmit)
		{
			theForm.onsubmit();
		}
		if(theForm && theForm.submit)
		{
			theForm.submit();
		}
	}
	function addFileInput()
	{
		var counter = document.getElementById("fileCount");
		var indexer = document.getElementById("lastIndex");
		var fileInputDiv = document.getElementById("fileInputDiv");
		var count = new Number(counter.value) + 1;
		counter.value = count;
		var prevIndex = indexer.value;
		var index = new Number(indexer.value) + 1;
		indexer.value = index;
		
		var contentDiv = document.createElement("div");
		contentDiv.setAttribute("id","contentDiv" + index);
		contentDiv.setAttribute("class","highlightPanel");
		contentDiv.setAttribute("className","highlightPanel");
		
		var ptag = document.createElement("p");
		ptag.setAttribute("className","shorttext");
		ptag.setAttribute("class","shorttext");		
		
		var label = document.createElement("label");
		label.setAttribute("for","content" + index);
		label.setAttribute("htmlFor","content" + index);
		
		var text = document.createTextNode("$tlang.getString("label.upload")");
		label.appendChild(text);
		ptag.appendChild(label);
		
		var file = document.createElement("input");
		file.setAttribute("type","file");
		file.setAttribute("name","content" + index);
		file.setAttribute("id","content" + index);
		// onchange="javascript:seedValue(this, 'name$i', true)" 
		ptag.appendChild(file);
		
		var propLink = document.createElement("a");
		propLink.setAttribute("href", "#");
		propLink.setAttribute("class","indnt2");
		propLink.setAttribute("className","indnt2");
		// onclick="javascript:showHide('propertiesDiv$i');"
		var text2 = document.createTextNode("$tlang.getString("edit.show")");
		propLink.appendChild(text2);
		ptag.appendChild(propLink);
		
		var removeLink = document.createElement("a");
		removeLink.setAttribute("href", "#");
		removeLink.setAttribute("class","indnt2");
		removeLink.setAttribute("className","indnt2");
		removeLink.setAttribute("id","image" + DOT + index);
		removeLink.onclick=handleRemoveFileItem;
		var image = document.createElement("img");
		image.setAttribute("src", "#imageLink("sakai/cross.png")");
		image.setAttribute("title", "$tlang.getString("edit.remove")");
		image.setAttribute("id","image" + DOT + index);
		image.setAttribute("name","image" + DOT + index);
		removeLink.appendChild(image);
		ptag.appendChild(removeLink);

		var prev = document.createElement("input");
		prev.setAttribute("type", "hidden");
		prev.setAttribute("id", "prev" + index);
		prev.setAttribute("name", "prev" + index);
		prev.setAttribute("value", prevIndex);
		
		var next = document.createElement("input");
		next.setAttribute("type", "hidden");
		next.setAttribute("id", "next" + index);
		next.setAttribute("name", "next" + index);
		next.setAttribute("value", "");

		contentDiv.appendChild(ptag);
		contentDiv.appendChild(prev);
		contentDiv.appendChild(next);
		
		fileInputDiv.appendChild(contentDiv);
		
		var prevPrev = document.getElementById("prev" + prevIndex);
		if(prevPrev && prevPrev.value)
		{
			prevPrev.value = index;
		}
		
		setMainFrameHeight(window.name);
		focus_path = [ "content" + index ];
		setFocus(focus_path);
	}
	function removeFileItem(index)
	{
		var fileInputDiv = document.getElementById("fileInputDiv");
		var contentDiv = document.getElementById("contentDiv" + index);
		if(contentDiv)
		{
			removeTree(contentDiv);
			fileInputDiv.removeChild(contentDiv);
		}
		var propertiesDiv = document.getElementById("propertiesDiv" + index);
		if(propertiesDiv)
		{
			removeTree(propertiesDiv);
			fileInputDiv.removeChild(propertiesDiv);
		}
		
		setMainFrameHeight(window.name);
	}
	function removeTree(nodeRef)
	{
		if(nodeRef && nodeRef.childNodes && nodeRef.childNodes.length && nodeRef.childNodes.length > 0)
		{
			for(var i = 0; i < nodeRef.childNodes.length; i++)
			{
				removeTree(nodeRef.childNodes[i]);
				nodeRef.removeChild(nodeRef.childNodes[i]);
			}
		}
	}
	function handleRemoveFileItem(evt)
	{
		evt = (evt) ? evt : ((event) ? event : null);
		if(evt)
		{
			var elem = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null)
			if(elem)
			{
				elem = (elem.nodeType == 1 || elem.nodeType == 9) ? elem : elem.parentNode;
				
				if(elem.id)
				{
					var dot = elem.id.lastIndexOf(DOT);
					if(dot >= 0)
					{
						var index = elem.id.substr(dot + 1);
						removeFileItem(index);
					}
				}
			}
		}
	}
	-->
</script>
