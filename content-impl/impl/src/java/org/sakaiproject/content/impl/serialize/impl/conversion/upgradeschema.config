# UpgradeSchema Control File (Default)
# Conversion needs the database connection details
dbURL=jdbc:mysql://127.0.0.1:3306/sakai22?useUnicode=true&characterEncoding=UTF-8
dbUser=sakai22
dbPass=sakai22

convert.0=FileSizeResourcesConversion
convert.0.handler.class=org.sakaiproject.content.impl.serialize.impl.conversion.FileSizeResourcesConversionHandler
convert.0.create.migrate.table=create table content_res_fsregister ( id varchar(1024), status varchar(99) )
convert.0.drop.migrate.table=drop table content_res_fsregister
convert.0.check.migrate.table=select count(*) from content_res_fsregister where status <> 'done'
convert.0.select.next.batch=select id from content_res_fsregister where status = 'pending' limit 100
convert.0.complete.next.batch=update content_res_fsregister set status = 'done' where id = ?
convert.0.mark.next.batch=update content_res_fsregister set status = 'locked' where id = ?
convert.0.populate.migrate.table=insert into content_res_fsregister (id,status) select RESOURCE_ID, 'pending' from CONTENT_RESOURCE
convert.0.select.record=select XML from CONTENT_RESOURCE where RESOURCE_ID = ?
convert.0.select.validate.record=select XML from CONTENT_RESOURCE where RESOURCE_ID = ?
convert.0.update.record=update CONTENT_RESOURCE set CONTEXT = ?, FILE_SIZE = ? where RESOURCE_ID = ? 

convert.1=Type1BlobCollectionConversion
convert.1.handler.class=org.sakaiproject.content.impl.serialize.impl.conversion.Type1BlobCollectionConversionHandler
convert.1.create.migrate.table=create table content_col_t1register ( id varchar(1024), status varchar(99) )
convert.1.drop.migrate.table=drop table content_col_t1register
convert.1.check.migrate.table=select count(*) from content_col_t1register  where status <> 'done'
convert.1.select.next.batch=select id from content_col_t1register where status = 'pending' limit 100
convert.1.complete.next.batch=update content_col_t1register set status = 'done' where id = ?
convert.1.mark.next.batch=update content_col_t1register set status = 'locked' where id = ?
convert.1.populate.migrate.table=insert into content_col_t1register (id,status) select COLLECTION_ID, 'pending' from CONTENT_COLLECTION where BINARY_ENTITY IS NULL
convert.1.select.record=select XML from CONTENT_COLLECTION where COLLECTION_ID = ?
convert.1.select.validate.record=select BINARY_ENTITY from CONTENT_COLLECTION where COLLECTION_ID = ?
convert.1.update.record=update CONTENT_COLLECTION set XML = NULL, BINARY_ENTITY = ?  where COLLECTION_ID = ?

convert.2=Type1BlobResourceConversion
convert.2.handler.class=org.sakaiproject.content.impl.serialize.impl.conversion.Type1BlobResourcesConversionHandler
convert.2.create.migrate.table=create table content_res_t1register ( id varchar(1024), status varchar(99) )
convert.2.drop.migrate.table=drop table content_res_t1register
convert.2.check.migrate.table=select count(*) from content_res_t1register  where status <> 'done'
convert.2.select.next.batch=select id from content_res_t1register where status = 'pending' limit 100
convert.2.complete.next.batch=update content_res_t1register set status = 'done' where id = ?
convert.2.mark.next.batch=update content_res_t1register set status = 'locked' where id = ?
convert.2.populate.migrate.table=insert into content_res_t1register (id,status) select RESOURCE_ID, 'pending' from CONTENT_RESOURCE where BINARY_ENTITY is NULL
convert.2.select.record=select XML from CONTENT_RESOURCE where RESOURCE_ID = ?
convert.2.select.validate.record=select BINARY_ENTITY from CONTENT_RESOURCE where RESOURCE_ID = ?
convert.2.update.record=update CONTENT_RESOURCE set CONTEXT = ?, FILE_SIZE = ?, XML = NULL, BINARY_ENTITY = ?, RESOURCE_TYPE_ID = ? where RESOURCE_ID = ? 
